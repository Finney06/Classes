name: Birthday Bot

on:
  workflow_dispatch:  # Allows manual triggering of the workflow
  schedule:
    - cron: '10 2 * * *'  # Runs the job at 3 AM UTC every day

jobs:
  run-bot:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '18'  # Specify the Node.js version you're using

    - name: Install Puppeteer dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y libnss3 libatk1.0-0 libatk-bridge2.0-0 libcups2 libxkbcommon-x11-0 libgbm-dev

    # Restore WhatsApp auth cache
    - name: Restore WhatsApp auth cache
      id: auth-cache-restore
      uses: actions/cache@v3
      with:
        path: .wwebjs_auth  # Path to the auth session
        key: whatsapp-auth-${{ github.ref }}  # Cache key based on branch/ref
        restore-keys: |
          whatsapp-auth-

    # Restore WhatsApp session cache
    - name: Restore WhatsApp session cache
      id: session-cache-restore
      uses: actions/cache@v3
      with:
        path: .wwebjs_cache  # Path to the session cache
        key: whatsapp-session-${{ github.ref }}  # Cache key based on branch/ref
        restore-keys: |
          whatsapp-session-

    - name: Install dependencies
      run: npm install

    # Debugging: Ensure auth and session directories are in place
    - name: Verify auth and session directories
      run: |
        mkdir -p .wwebjs_auth
        mkdir -p .wwebjs_cache
        ls -la .wwebjs_auth || echo "No .wwebjs_auth found"
        ls -la .wwebjs_cache || echo "No .wwebjs_cache found"

    - name: Run the bot
      run: node messagingBot.js
      env:
        AIRTABLE_API_KEY: ${{ secrets.AIRTABLE_API_KEY }}
        AIRTABLE_BASE_ID: ${{ secrets.AIRTABLE_BASE_ID }}
        AIRTABLE_TABLE_ID: ${{ secrets.AIRTABLE_TABLE_ID }}
        GROUP_CHAT_ID: ${{ secrets.GROUP_CHAT_ID }}
        ADMIN_NUMBER: ${{ secrets.ADMIN_NUMBER }}

    # Save WhatsApp auth cache after the bot run
    - name: Save WhatsApp auth cache
      uses: actions/cache@v3
      with:
        path: .wwebjs_auth  # Path to the auth session
        key: whatsapp-auth-${{ github.ref }}  # Keep the same cache key to update the existing cache

    # Save WhatsApp session cache after the bot run
    - name: Save WhatsApp session cache
      uses: actions/cache@v3
      with:
        path: .wwebjs_cache  # Path to the session cache
        key: whatsapp-session-${{ github.ref }}  # Keep the same cache key to update the existing cache

    # Optional step: Debugging to check if the cache directories exist
    - name: Check auth cache directory
      run: ls -la .wwebjs_auth || echo "No .wwebjs_auth found"

    - name: Check session cache directory
      run: ls -la .wwebjs_cache || echo "No .wwebjs_cache found"
